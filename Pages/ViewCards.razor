@page "/cards/view"
@using Cardalog.Models
@inject HttpClient Http

<h1>All cards</h1>
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#cardModal">
  Add a card
</button>
<hr />

<div class="modal fade" id="cardModal" tabIndex="-1" role="dialog" aria-labelledby="cardModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="cardModalLabel">New card</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        ...
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Save</button>
      </div>
    </div>
  </div>
</div>

@if (cards == null)
{
  <p><em>Loading...</em></p>
}
else
{
  @foreach (var card in cards)
  {
    <div class="row card">
      <div class="col-sm-12">
        <div class="row title">
          <div class="col-sm-6 title">@card.Title</div>
          <div class="col-sm-1 cost">@card.Cost.Black |</div>
          <div class="col-sm-1 cost">@card.Cost.Blue |</div>
          <div class="col-sm-1 cost">@card.Cost.Colorless |</div>
          <div class="col-sm-1 cost">@card.Cost.Green |</div>
          <div class="col-sm-1 cost">@card.Cost.Red |</div>
          <div class="col-sm-1 cost">@card.Cost.White</div>
        </div>
        <hr />
        <div class="row type">
          <div class="col-sm-2">@card.Type</div>
          <div class="col-sm-2">- @card.Subtype</div>
          <div class="col-sm-2 spacer"></div>
          <div class="col-sm-3">@card.Expansion.Name</div>
          <div class="col-sm-3">(@card.Rarity)</div>
        </div>
        <hr />
        <div class="row text">
          <div class="col-md-6">@card.Text</div>
        </div>
        <div class="row spacer"></div>
        <div class="row ftext">
          <div class="col-md-6">@card.FlavorText</div>
        </div>
        <hr />
        <div class="row pt">
          <div class="col-sm-10 spacer"></div>
          <div class="col-sm-1 oi oi-heart">@card.Power</div>
          <div class="col-sm-1 oi oi-shield">@card.Toughness</div>
        </div>
      </div>
    </div>
  }
}

@code {
  private Card[] cards;

  protected override async Task OnInitializedAsync()
  {
    cards = await Http.GetJsonAsync<Card[]>("http://localhost:7071/api/cards");
  }
}