@page "/cards"
@using Cardalog.Models
@inject HttpClient Http

<h1>Card catalog</h1>

<h2>New card</h2>

@if (card != null)
{
  <EditForm Model="@card" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <p>
      <label for="Title">Title: </label>
      <InputText id="Title" @bind-Value="card.Title" />
    </p>
    <p>
      <label for="Type">Type: </label>
      <InputText id="Type" @bind-Value="card.Type" />
    </p>
    <p>
      <label for="Subtype">Subtype: </label>
      <InputText id="Subtype" @bind-Value="card.Subtype" />
    </p>
    <p>
      <label for="Rarity">Rarity: </label>
      <InputText id="Rarity" @bind-Value="card.Rarity" />
    </p>
    <p>
      <label for="Cost">Cost: </label>
      <InputText id="Cost" @bind-Value="card.Cost" />
    </p>
    <p>
      <label for="ConvertedCost">Converted Cost: </label>
      <InputNumber id="ConvertedCost" @bind-Value="card.ConvertedCost" />
    </p>
    <p>
      <label for="Text">Text: </label>
      <InputText id="Text" @bind-Value="card.Text" />
    </p>
    <p>
      <label for="FlavorText">Flavor Text: </label>
      <InputText id="FlavorText" @bind-Value="card.FlavorText" />
    </p>
    <p>
      <label for="Power">Power: </label>
      <InputNumber id="Power" @bind-Value="card.Power" />
    </p>
    <p>
      <label for="Toughness">Toughness: </label>
      <InputNumber id="Toughness" @bind-Value="card.Toughness" />
    </p>
    <p>
      <label for="CardNumber">Card Number: </label>
      <InputNumber id="CardNumber" @bind-Value="card.CardNumber" />
    </p>
    <p>
      <label for="Artist">Artist: </label>
      <InputText id="Artist" @bind-Value="card.Artist" />
    </p>
    <h3>Expansion</h3>
    <p>
      <label for=ExpansionName>Name: </label>
      <InputText id="ExpansionName" @bind-Value="card.Expansion.Name" />
    </p>
    <p>
      <label for=ExpansionTotal>Total Cards: </label>
      <InputNumber id="ExpansionCards" @bind-Value="card.Expansion.TotalCards" />
    </p>
    <p>
      <label for=ExpansionAbbreviation>Abbreviation: </label>
      <InputText id="ExpansionAbbreviation" @bind-Value="card.Expansion.Abbreviation" />
    </p>
    <p>
      <label for=ExpansionCopyright>Copyright: </label>
      <InputText id="ExpansionCopyright" @bind-Value="card.Expansion.Copyright" />
    </p>

    <button type="submit">Submit</button>
  </EditForm>
}

<h2>Cards</h2>
@if (cards == null)
{
  <p><em>Loading...</em></p>
}
else
{
  <table class="table">
    <thead>
      <tr>
        <th>Title</th>
        <th>Type</th>
        <th>Subtype</th>
        <th>Rarity</th>
        <th>Cost</th>
        <th>Converted Cost</th>
        <th>Text</th>
        <th>Flavor Text</th>
        <th>Power</th>
        <th>Toughness</th>
        <th>Expansion</th>
        <th>Card Number</th>
        <th>Artist</th>
      </tr>
    </thead>
    <tbody>
      @foreach (var card in cards)
      {
        <tr>
          <td>@card.Title</td>
          <td>@card.Type</td>
          <td>@card.Subtype</td>
          <td>@card.Rarity</td>
          <td>@card.Cost</td>
          <td>@card.ConvertedCost</td>
          <td>@card.Text</td>
          <td>@card.FlavorText</td>
          <td>@card.Power</td>
          <td>@card.Toughness</td>
          <td>@card.Expansion</td>
          <td>@card.CardNumber</td>
          <td>@card.Artist</td>
        </tr>
      }
    </tbody>
  </table>
}

@code {
  private Card[] cards;
  private Card card;

  protected override async Task OnInitializedAsync()
  {
    cards = await Http.GetJsonAsync<Card[]>("http://localhost:7071/api/cards");
    card = new Card
    {
      Expansion = new Expansion()
    };
  }

  private async void HandleValidSubmit()
  {
    await Http.PostJsonAsync("http://localhost:7071/api/cards", card);
    Console.WriteLine("Card submitted successfully.");
  }
}