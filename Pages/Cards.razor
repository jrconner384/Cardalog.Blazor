@page "/cards"
@page "/cards/view"
@page "/cards/add"
@using Cardalog.Models
@using Cardalog.Shared.Components
@inject HttpClient Http

<!-- <BSNavbar IsExpand="true" IsDark="false" Color="Color.Light" class="pagenav">
  <BSNavbarBrand Href="javascript:void(0);">Cards</BSNavbarBrand>
  <BSCollapse IsOpen="true" IsNavbar="true">
    <BSNav IsList="true" Class="mr-auto" IsNavbar="true">
      <BSNavItem>
        <BSButton OnClick="@(() => addCard.Show())" class="oi oi-plus" IsOutline="true" Size="Size.Large" Color="Color.Success"></BSButton>
      </BSNavItem>
    </BSNav>
  </BSCollapse>
</BSNavbar> -->

<button type="button" class="btn btn-outline-success oi oi-plus" data-toggle="modal" data-target="#newCardModal"></button>
<div class="modal fade" id="newCardModal" tabindex="-1" role="dialog" aria-labelledby="newCardModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h3 class="modal-title" id="newCardModalLabel">Create a card</h3>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <NewCardForm />
      </div>
    </div>
  </div>
</div>

@if (cards == null)
{
  <p><em>Loading...</em></p>
}
else
{
  <div class="main-view">
  @foreach (var card in cards)
  {
    <CardDisplayCard card="@card" />
  }
  </div>
}

@code {
  private Card[] cards;

  protected override async Task OnInitializedAsync()
  {
    cards = await Http.GetJsonAsync<Card[]>("http://localhost:7071/api/cards");
  }
}
