@page "/cards/add"
@using Cardalog.Models
@inject HttpClient Http
@inject IJSRuntime JSRuntime

<h1>Create a card</h1>
@if (card != null)
{
  <EditForm Model="@card" OnValidSubmit="@HandleValidSubmit" id="CardInput">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group form-row">
      <div class="col-md-6">
        <label for="Title">Title</label>
        <InputText id="Title" @bind-Value="card.Title" placeholder="Custodian of the Trove" class="form-control" />
      </div>
      <div class="col">
        <label for="Type">Type</label>
        <InputText id="Type" @bind-Value="card.Type" placeholder="Artifact Creature" class="form-control" />
      </div>
      <div class="col">
        <label for="Subtype">Subtype</label>
        <InputText id="Subtype" @bind-Value="card.Subtype" placeholder="Golem" class="form-control" />
      </div>
      <div class="col">
        <label for="Condition">Condition</label>
        <InputSelect id="Condition" @bind-Value="card.Condition" placeholder="Please select a value..." class="form-control">
          <option value="Poor">Poor</option>
          <option value="Fair">Fair</option>
          <option value="Good">Good</option>
          <option value="Excellent">Excellent</option>
          <option value="Near mint">Near mint</option>
          <option value="Mint">Mint</option>
        </InputSelect>
      </div>
    </div>

    <div class="form-group form-row">
      <div class="col-md-4">
        <label for="Rarity">Rarity</label>
        <InputText id="Rarity" @bind-Value="card.Rarity" placeholder="Common" class="form-control" />
      </div>
      <div class="col">
        <label for="Black">Black</label>
        <InputNumber id="Black" @bind-Value="card.Cost.Black" placeholder="0" class="form-control" />
      </div>
      <div class="col">
        <label for="Blue">Blue</label>
        <InputNumber id="Blue" @bind-Value="card.Cost.Blue" placeholder="0" class="form-control" />
      </div>
      <div class="col">
        <label for="Colorless">Colorless</label>
        <InputNumber id="Colorless" @bind-Value="card.Cost.Colorless" placeholder="3" class="form-control" />
      </div>
      <div class="col">
        <label for="Green">Green</label>
        <InputNumber id="Green" @bind-Value="card.Cost.Green" placeholder="0" class="form-control" />
      </div>
      <div class="col">
        <label for="Red">Red</label>
        <InputNumber id="Red" @bind-Value="card.Cost.Red" placeholder="0" class="form-control" />
      </div>
      <div class="col">
        <label for="White">White</label>
        <InputNumber id="White" @bind-Value="card.Cost.White" placeholder="0" class="form-control" />
      </div>
      <div class="col">
        <label for="Converted">Converted</label>
        <InputNumber id="Converted" @bind-Value="card.Cost.Converted" placeholder="3" class="form-control" readonly />
      </div>
    </div>

    <div class="form-group form-row">
      <div class="col">
        <label for="Text">Text</label>
        <InputTextArea id="Text" @bind-Value="card.Text" placeholder="Defender. Custodian of the Trove enters the battlefield tapped." class="form-control" />
      </div>
      <div class="col">
        <label for="FlavorText">Flavor Text</label>
        <InputTextArea id="FlavorText" @bind-Value="card.FlavorText" placeholder="Silumgar delights in repurposing the treasures of other clans to serve his own ravenous greed." class="form-control" />
      </div>
    </div>

    <div class="form-group form-row">
      <div class="col-md-2">
        <label for="Power">Power</label>
        <InputNumber id="Power" @bind-Value="card.Power" placeholder="2" class="form-control" />
      </div>
      <div class="col-md-2">
        <label for="Toughness">Toughness</label>
        <InputNumber id="Toughness" @bind-Value="card.Toughness" placeholder="5" class="form-control" />
      </div>
      <div class="col-md-2">
        <label for="CardNumber">Number</label>
        <InputNumber id="CardNumber" @bind-Value="card.CardNumber" placeholder="236" class="form-control" />
      </div>
      <div class="col">
        <label for="Artist">Artist</label>
        <InputText id="Artist" @bind-Value="card.Artist" placeholder="Raoul Vitale" class="form-control" />
      </div>
    </div>

    <h2>Expansion</h2>
    <div class="form-group form-row">
      <div class="col">
        <label for="ExpansionName">Name</label>
        <InputText id="ExpansionName" @bind-Value="card.Expansion.Name" placeholder="Dragons of Tarkir" class="form-control" />
      </div>
      <div class="col-md-2">
        <label for="ExpansionAbbreviation">Abbreviation</label>
        <InputText id="ExpansionAbbreviation" @bind-Value="card.Expansion.Abbreviation" placeholder="DTK" class="form-control" />
      </div>
    </div>
    <div class="form-group form-row">
      <div class="col">
        <label for="ExpansionCopyright">Copyright</label>
        <InputText id="ExpansionCopyright" @bind-Value="card.Expansion.Copyright" placeholder="2015" class="form-control" />
      </div>
      <div class="col-md-2">
        <label for="ExpansionCards">Count</label>
        <InputNumber id="ExpansionCards" @bind-Value="card.Expansion.TotalCards" placeholder="264" class="form-control" />
      </div>
    </div>

    <br />
    <button type="submit">Submit</button>
  </EditForm>
}

@code {
  private Card card;

  protected override async Task OnInitializedAsync()
  {
    await Task.Run(() =>
      card = new Card
      {
        Cost = new Cost(),
        Expansion = new Expansion()
      });
  }

  private async void HandleValidSubmit()
  {
    await Http.PostJsonAsync("http://localhost:7071/api/cards", card);
    await JSRuntime.InvokeAsync<string>("resetForm", "CardInput");
    Console.WriteLine("Card submitted successfully.");
  }
}
