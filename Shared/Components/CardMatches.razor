@namespace Cardalog.Shared.Components
@using Cardalog.Models

@if (Cards.Count() > 0 && GetMatches().Count() > 0)
{
  <InputSelect id="mtg-card-select" @bind-Value="title">
    <option value="Matches">Matches</option>
    @foreach (var card in GetMatches())
    {
      <option value="@card.Title" @onclick="OnClick">@card.Title</option>
    }
  </InputSelect>
}

@code {
  [Parameter]
  public IEnumerable<Card> Cards { get; set; }

  [Parameter]
  public string SearchTerm { get; set; }

  [Parameter]
  public EventCallback<string> CardSelected { get; set; }

  private string title;

  public IEnumerable<Card> GetMatches()
  {
    if (SearchTerm?.Length > 0)
    {
      return Cards.Where(it => it.Title.StartsWith(SearchTerm, true, System.Globalization.CultureInfo.InvariantCulture));
    }
    return new List<Card>();
  }

  private void OnClick()
  {
    Console.WriteLine($"Clicked value {title}");
    CardSelected.InvokeAsync(title);
    title = null; // Title must be reset else the drop down list misbehaves when the search term is changed.
  }
}